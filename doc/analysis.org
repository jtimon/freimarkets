
* Introduction

  The present document contains the specifications of a protocol for
p2p trade of cryptography secured tokens that can represent arbitrary
assets such as complementary currencies to enable inter-trade between
them.

This protocol supports tokens that only exist in certain databases
and also tokens that exist publicly in a p2p accounting network such
as Bitcoin. That network protocol has to be extended to be compatible
with this protocol. FreiMarkets is an extension of the Freicoin
protocol to support this protocol.

* Definitions

- *Asset*: a crypto-token type representing a certain type of
  property.


- *Crypto-chain*: The data structure that contains the information of
  a p2p accounting network (for example, Freicoin's blockchain).


- *Public asset*: An asset that exists in a crypto-chain.


- *Private asset*: An asset that exists in a private server.


- *Holder*: a user that owns certain quantity of a given asset.


- *Issuer*: the entity responsible for a given asset. Only the
  issuer can create new units of a given asset and it is also
  responsible for the real world backing of the asset if it has any.


- *Accountant*: a server responsible for the accounting of a given
  asset. It has to maintain a database of the balances and prevent
  the double-spending of the tokens, thus its signature is required
  for every transaction involving an asset it accounts for. For this
  reason accountants are supposed to be always online. An issuer can
  also act as its own accountant. 

  Since the crypto-chain does the accounting and double-spending
  prevention on its own, for public assets the accountant is
  optional, for example, the asset Freicoin (FRC) doesn't have any
  accountant. The accountant of a public asset can perform other
  functions like ensuring that the asset only goes to addresses
  (accounts) in a set of authorized accounts defined by the issuer.

- *Advertisement*: A non-binding offer to exchange certain quantity
  of an asset for another at given price or rate.
  Advertisements can refer to two private assets or a private and a
  public one, but the asset to be received is always private.


- *Order*: A binding offer to to exchange certain quantity
  of a public asset for another public asset at given price or rate.
  Orders can offer a private asset in exchange of a public one, but
  not the other way around: an order cannot offer a public asset in
  exchange of a private one, because the crypto-chain cannot validate
  the transfer of the private asset on its own.


- *Transitive transaction*: an atomic transaction involving more
  than two assets. This is similar to Ryan Fugger's Ripple concept.
  Transitive transactions can involve an arbitrary number of assets,
  allowing the payer to use a different currency than the one the
  recipient will receive. This allows economic agents without a
  direct trust relationship to interact with each other.


- *Registry*: a server providing a timestamping service to ensure
  atomicity in non-trivial transactions (involving more than one
  asset) that aren't committed using a crypto-chain. Any transaction
  involving public assets must be committed using its crypto-chain
  and therefore doesn't need a registry.

  The registry doesn't have to know anything about the transaction
  itself apart the commit secret, the commit secret hash and the
  timestamp. It publishes tuples with these three elements. It doesn't
  even know if the transaction was valid or it expired.

- *Promise*: A signed sub-transaction which validity depends on the
  commit of the full transaction by a registry or a crypto-chain.
  They contain the hash of a commit secret in the case of purely
  private transactions which are to be committed by a registry. If
  the transaction is partially public, they contain a hash of the
  full public transaction (before signatures are added) instead of
  the commit secret.

  They must contain an expiry timestamp for registry commits. In the
  case of crypto-chain commits, the public part of the transaction
  must contain the expiry time in its own format (for example, in the
  case of Freicoin the expiry time would be expressed as a block
  number).

- **: 

- **: 

- **: 

- **: 

- **: 

- **: 


